stages:
- test

variables:
  roles_path: /etc/ansible/roles/tests

.test: &test
  image: docker:stable
  services:
  - docker:dind
  stage: test
  before_script:
  - docker pull ${distribution}:${version}
  - docker build --no-cache --rm
    --build-arg version=${version}
    -f tests/${distribution}.dockerfile
    --tag=${distribution}-${version}:ansible tests
  - export container_id=$(mktemp)
  - docker run --detach -v $PWD/tests:${roles_path}:ro ${distribution}-${version}:ansible > "${container_id}"
  script:
  - docker exec "$(cat ${container_id})"
    env ANSIBLE_FORCE_COLOR=1
    ansible-playbook -v ${roles_path}/test.yml --syntax-check
  - docker exec "$(cat ${container_id})"
    env ANSIBLE_FORCE_COLOR=1
    ansible-playbook -v ${roles_path}/test.yml
  - docker rm -f "$(cat ${container_id})"

debian-buster:
  <<: *test
  variables:
    distribution: debian
    version: buster

debian-jessie:
  <<: *test
  variables:
    distribution: debian
    version: jessie

debian-stretch:
  <<: *test
  variables:
    distribution: debian
    version: stretch

ubuntu-disco:
  <<: *test
  variables:
    distribution: ubuntu
    version: disco

ubuntu-cosmic:
  <<: *test
  variables:
    distribution: ubuntu
    version: cosmic

ubuntu-bionic:
  <<: *test
  variables:
    distribution: ubuntu
    version: bionic

ubuntu-xenial:
  <<: *test
  variables:
    distribution: ubuntu
    version: xenial
